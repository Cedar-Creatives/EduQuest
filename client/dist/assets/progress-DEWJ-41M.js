import{c as $,r as u,j as l,m as I,P as f,e as C}from"./index-BR-T537K.js";/**
 * @license lucide-react v0.294.0 - ISC
 *
 * This source code is licensed under the ISC license.
 * See the LICENSE file in the root directory of this source tree.
 */const S=$("CheckCircle",[["path",{d:"M22 11.08V12a10 10 0 1 1-5.93-9.14",key:"g774vq"}],["path",{d:"m9 11 3 3L22 4",key:"1pflzl"}]]);var d="Progress",c=100,[E,k]=I(d),[R,j]=E(d),m=u.forwardRef((e,r)=>{const{__scopeProgress:n,value:o=null,max:a,getValueLabel:h=w,...b}=e;(a||a===0)&&!p(a)&&console.error(M(`${a}`,"Progress"));const s=p(a)?a:c;o!==null&&!v(o,s)&&console.error(V(`${o}`,"Progress"));const t=v(o,s)?o:null,y=i(t)?h(t,s):void 0;return l.jsx(R,{scope:n,value:t,max:s,children:l.jsx(f.div,{"aria-valuemax":s,"aria-valuemin":0,"aria-valuenow":i(t)?t:void 0,"aria-valuetext":y,role:"progressbar","data-state":P(t,s),"data-value":t??void 0,"data-max":s,...b,ref:r})})});m.displayName=d;var g="ProgressIndicator",x=u.forwardRef((e,r)=>{const{__scopeProgress:n,...o}=e,a=j(g,n);return l.jsx(f.div,{"data-state":P(a.value,a.max),"data-value":a.value??void 0,"data-max":a.max,...o,ref:r})});x.displayName=g;function w(e,r){return`${Math.round(e/r*100)}%`}function P(e,r){return e==null?"indeterminate":e===r?"complete":"loading"}function i(e){return typeof e=="number"}function p(e){return i(e)&&!isNaN(e)&&e>0}function v(e,r){return i(e)&&!isNaN(e)&&e<=r&&e>=0}function M(e,r){return`Invalid prop \`max\` of value \`${e}\` supplied to \`${r}\`. Only numbers greater than 0 are valid max values. Defaulting to \`${c}\`.`}function V(e,r){return`Invalid prop \`value\` of value \`${e}\` supplied to \`${r}\`. The \`value\` prop must be:
  - a positive number
  - less than the value passed to \`max\` (or ${c} if no \`max\` prop is set)
  - \`null\` or \`undefined\` if the progress is indeterminate.

Defaulting to \`null\`.`}var N=m,_=x;const L=u.forwardRef(({className:e,value:r,...n},o)=>l.jsx(N,{ref:o,className:C("relative h-4 w-full overflow-hidden rounded-full bg-secondary",e),...n,children:l.jsx(_,{className:"h-full w-full flex-1 bg-primary transition-all",style:{transform:`translateX(-${100-(r||0)}%)`}})}));L.displayName=N.displayName;export{S as C,L as P};
